/*
  Theme and global variables
*/
html {
  overflow-y: scroll;

  --game-spacing: 32px;
  --header-height: 4rem;

  --color-success: hsl(150deg 70% 30%);
  --color-warning: hsl(50deg 100% 30%);
  --color-error: hsl(0deg 70% 45%);
  --color-gray-100: hsl(0deg 0% 10%);
  --color-gray-300: hsl(0deg 0% 25%);
  --color-gray-500: hsl(0deg 0% 50%);
  --color-gray-700: hsl(0deg 0% 75%);
  --color-gray-900: hsl(0deg 0% 90%);
  
  
  --color-synth-gray: #606470;
  --color-synth-pink: #FF6F86;
  --color-synth-white: #D0D4E1;
  --color-synth-yellow: #DCAE00;
  --color-synth-light-gray: #A8ADB5;
  --color-synth-dark-gray: #525862;
  
  background: var(--color-synth-gray);
}

/*
  Custom styles
*/
body {
  font-family: "Roboto", sans-serif;
}

@media (max-height: 600px) {
  body {
    --game-spacing: 8px;
  }
}

button {
  /* margin: 0;
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  text-align: left;
  color: inherit; */
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
}

header {
  display: flex;
  height: var(--header-height);
  border-bottom: 1px solid var(--color-gray-700);
  color: var(--color-gray-300);
}

header .side {
  width: var(--header-height);
  display: grid;
  place-content: center;
}

h1 {
  flex: 1;
  font-size: 2rem;
  line-height: var(--header-height);
  text-align: center;
  color: var(--color-synth-white);
  font-weight: 200;
}

@media (max-width: 25rem) {
  h1 {
    font-size: 1.25rem;
  }
}

.game-wrapper {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: var(--game-spacing);
  padding: var(--game-spacing) 32px;
  margin: 0 auto;
  min-width: 250px;
  max-width: min(500px, 58vh, 100%);
}

.guess-results {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.row {
  display: flex;
  gap: 4px;
  margin-bottom: 4px;
  justify-content: left;
}

.cell {
  position: relative;
  width: 20%;
  display: grid;
  place-content: center;
  aspect-ratio: 1 / 1;
  border: 2px solid var(--color-gray-700);
  border-radius: var(--radius);
  font-size: 2rem;

}

/*
  Modal styles

  HACK: I'm doing this in a quick and dirty way.
  Later in the course, we'll see my preferred way of building
  modals in React.
*/
[data-reach-dialog-content] {
  position: relative;
  border-radius: 8px;
  padding: 24px 32px;
}
.modal-close-btn {
  position: absolute;
  top: 0;
  right: 0;
  padding: 16px;
  cursor: pointer;
}
.modal-title {
  margin-bottom: 0.5em;
}

/*
  Keyframe animations
*/
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0%);
  }
}


/* .sequencer {
  border-radius: 5px;
  width: fit-content;
  display: grid;
  grid-template-rows: repeat(8, 1fr);
  grid-template-columns: fit-content;
  margin: auto;
} */

.note {
  border-radius: 5px;
  height: 4em;
  width: 4em;
  border-style: solid;
  border-width: 1px;
  border-color: lightgray;
  margin: 2px;
  outline: none;
}

.sequencer-row {
  display: inline-block;
  white-space: nowrap;
}

.note-is-active {
  background-color: green;
  border: 1px solid black;
}

.note-not-active {
  background-color: solid grey;
}

.toggle-play {
  display: flex;
}

.play-button {
  margin: auto;
}


.sequencer{
  min-width: 80vw;
  margin-inline: auto;
}

.cell.active{
  color: firebrick;
  font-size: 3rem;
}

.lamp{
  background: #333333;
  width: 0.3rem;
  height: 1rem;
}
.cell.active .lamp{
  background: var(--color-synth-pink);
}

.cell{
  height: 3rem;
  width: 3rem;
  font-size: 1rem;
}
.pressed{
  color: white;
  background: var(--color-synth-dark-gray);
  font-size: 1.1rem;
}

.stepindicator{
margin: 3rem 0;

}
.stepindicator .cell{
  background-color: var(--color-synth-light-gray);
}

.row-right{
  display: flex;
  justify-content: right;
  align-items: center;
  margin-top: 2rem;
  gap:2rem;
}

.gridButton{
  display: flex;
  flex-direction: column;
}

.row{
  margin: 2rem 0;
}



.switchButton{
  background: var(--color-synth-yellow);
}
.toggleButton{
  background: var(--color-synth-white);
}


